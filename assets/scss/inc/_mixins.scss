// Replace letters
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// Encode symbols
@function url-encode($string) {
	$map: (
		"%": "%25",
		"<": "%3C",
		">": "%3E",
		" ": "%20",
		"!": "%21",
		"*": "%2A",
		"'": "%27",
		'"': "%22",
		"(": "%28",
		")": "%29",
		";": "%3B",
		":": "%3A",
		"@": "%40",
		"&": "%26",
		"=": "%3D",
		"+": "%2B",
		"$": "%24",
		",": "%2C",
		"/": "%2F",
		"?": "%3F",
		"#": "%23",
		"[": "%5B",
		"]": "%5D"
	);

	$new: $string;

	@each $search, $replace in $map {
		$new: str-replace($new, $search, $replace);
	}

	@return $new;
}

// Format the SVG as a URL
@function inline-svg($string) {
	@return url('data:image/svg+xml,#{url-encode($string)}');
}

// Creates a menu icon with a set width, height, number of bars, and colors.
// The mixin uses the height of the icon and the weight of the bars to
// determine spacing. <div class="docs-example-burger"></div>
//
// @param {Color} $color [$black] - Color to use for the icon.
// @param {Color} $color-hover [gray] - Color of hovered icon.
// @param {Number} $width [20px] - Width of the icon.
// @param {Number} $height [16px] - Height of the icon.
// @param {Number} $weight [2px] - Height of individual bars in the icon.
// @param {Number} $bars [3] - Number of bars in the icon.
@mixin menu-icon(
	$color: $black,
	$color-hover: $dark-gray,
	$width: 20px,
	$height: 16px,
	$weight: 2px,
	$radius: 0,
	$bars: 3
) {
	// box-shadow CSS output
	$shadow: ();
	$hover-shadow: ();

	// Spacing between bars is calculated based on the total height
	// of the icon and the weight of each bar
	$spacing: ($height - ($weight * $bars)) / ($bars - 1);

	@if unit($spacing) == 'px' {
		$spacing: floor($spacing);
	}

	// Icon container
	position: relative;
	display: inline-block;
	vertical-align: middle;
	width: $width;
	height: $height;
	cursor: pointer;

	span {
		top: 0;
		display: block;

		&::before, &::after {
			content: "";
			display: block;
		}

		&, &::before, &::after {
			position: absolute;
			left: 0;
			width: 100%;
			height: $weight;
			background-color: $color;
			border-radius: $radius;
			-webkit-transition-property: -webkit-transform, opacity;
			transition-property: transform, opacity;
			transition-duration: 0.15s;
			transition-timing-function: ease;
		}

		&::before {
			top: $spacing + $weight;
		}

		&::after {
			top: ($spacing + $weight) * 2;
		}

		&:hover {
			&, &::before, &::after {
				background-color: $color-hover;
			}
		}
	}

	&[aria-expanded="true"] {
		span {
			$y-offset: $spacing + $weight;

			transform: translate3d(0, $y-offset, 0) rotate(45deg);

			&::before {
				transform: rotate(-45deg) translate3d($width / -7, $spacing * -1, 0);
				display: none;
				//opacity: 0;
			}

			&::after {
				transform: translate3d(0, $y-offset * -2, 0) rotate(-90deg);
			}
		}
	}
}

// Remove bullets and spacing of the list
@mixin list-unstyled {
	margin: 0;
	padding: 0;
	list-style: none;
}

// Place element in the center of the parent element
@mixin position-center {
	position: absolute;
	top: 50%;
	right: 50%;
	transform: translate(50%, -50%);
}

// Apply styles to the last row of grid elements depends on columns number
@mixin last-grid-row($columns) {
	&:nth-child(#{$columns}n+1):nth-last-child(-n+#{$columns}),
	&:nth-child(#{$columns}n+1):nth-last-child(-n+#{$columns}) ~ * {
		@content;
	}
}

// Default wordpress spinner animation on loading
@mixin loader() {
	&::after {
		content: '';
		position: absolute;
		top: 50%;
		left: 50%;
		display: block;
		width: 16px;
		height: 16px;
		margin-top: -8px;
		margin-left: -8px;
		background-image: inline-svg('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 91.4 91.4"><circle cx="45.7" cy="45.7" r="45.7"/><circle cx="45.7" cy="24.4" r="12.5" fill="#fff"/></svg>');
		background-position: 50% 50%;
		background-size: cover;
		animation: spin 1s ease-in-out infinite;
	}
}



/* ---------------------------------------
	Button Mixins
--------------------------------------- */

// Base button mixin
@mixin button-base {
	display: inline-block;
	margin: 5px 5px 5px 0;
	padding: 15px 35px;
	border: 2px solid transparent;
	border-radius: 50px;
	font-weight: 600;
	text-decoration: none;
	transition: all 0.3s ease;
	font-size: 16px;
	text-transform: uppercase;
	letter-spacing: 0.5px;
	cursor: pointer;
	text-align: center;
	line-height: 1;
	box-sizing: border-box;
}

// Primary button (gold)
@mixin button-primary {
	@include button-base;
	background: #edbd2d;
	color: #2f3a55;
	border-color: #edbd2d;

	&:hover, &:focus {
		background: transparent;
		color: #edbd2d;
		transform: translateY(-2px);
		box-shadow: 0 5px 15px rgba(237, 189, 45, 0.4);
		text-decoration: none;
		border-color: #edbd2d;
	}
}

// Secondary button (blue)
@mixin button-secondary {
	@include button-base;
	background: #759dfd;
	color: #2f3a55;
	border-color: #759dfd;

	&:hover, &:focus {
		background: transparent;
		color: #759dfd;
		border-color: #759dfd;
		transform: translateY(-2px);
		box-shadow: 0 5px 15px rgba(117, 157, 253, 0.4);
		text-decoration: none;
	}
}

// White button (for dark backgrounds)
@mixin button-white {
	@include button-base;
	background: white;
	color: #2f3a55;
	border-color: white;

	&:hover, &:focus {
		background: transparent;
		color: white;
		border-color: white;
		transform: translateY(-2px);
		box-shadow: 0 5px 15px rgba(255, 255, 255, 0.4);
		text-decoration: none;
	}
}

// Contact button (for staff members)
@mixin button-contact {
	display: inline-block;
	background: #02627f;
	color: white;
	padding: 8px 20px;
	border-radius: 2rem;
	text-decoration: none;
	font-size: 22.2px;
	font-weight: 400;
	text-transform: uppercase;
	letter-spacing: 0.5px;
	border: 2px solid #02627f;
	transition: all 0.3s ease;
	margin: auto;
	height: auto;
	margin-bottom: 2rem;

	&:hover {
		background: transparent;
		color: $gold;
		text-decoration: none;
		border: 2px solid $gold;
	}
}

// Large button variant
@mixin button-large {
	padding: 18px 45px;
	font-size: 18px;
}

// Small button variant
@mixin button-small {
	padding: 10px 25px;
	font-size: 14px;
}

// Full width button
@mixin button-full-width {
	width: 100%;
	margin-left: 0;
	margin-right: 0;
}

// Slider button (larger for hero sections)
@mixin button-slider {
	@include button-base;
	@include button-large;
	font-size: 27px;
	background: #edbd2d;
	color: #2f3a55;
	border-color: #edbd2d;

	&:hover, &:focus {
		background: transparent;
		color: #edbd2d;
		transform: translateY(-2px);
		box-shadow: 0 5px 15px rgba(237, 189, 45, 0.4);
		text-decoration: none;
	}

	@include media-breakpoint-down(md) {
		padding: 12px 25px;
		width: 85%;
		margin: 0 auto;
		font-size: 18px;
	}

	&.btn-secondary {
		background: #759dfd;
		border-color: #759dfd;

		&:hover {
			background: transparent;
			color: #759dfd;
			border-color: #759dfd;
			box-shadow: 0 5px 15px rgba(117, 157, 253, 0.4);
		}
	}
}

// Navigation button (for header menu)
@mixin button-nav {
	@include button-base;
	background-color: $gold;
	color: #0b1837;
	height: 3.5rem;
	width: 6rem;
	border-radius: 0 1.5rem 0 0;
	font-weight: 700;
	font-size: 14px;
	padding: 0;
	margin: 0 0 0 8px;

	&:hover, &:focus {
		background: #0b1837;
		color: $gold;
		text-decoration: none;
	}
}